version: v1.0
name: Semaphore PHP Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
global_job_config:
  prologue:
    commands:
      - sem-version php 7.3
blocks:
  - name: Install Dependencies
    task:
      env_vars:
        - name: APP_ENV
          value: prod
      jobs:
        - name: composer
          commands:
            - checkout
            - cache restore
            - composer install
            - npm install
            - Java install
            - cache store
            - cp .env.example .env
            - 'php artisan key:generate'
  - name: Run Code Analysis
    task:
      prologue:
        commands:
          - checkout
          - cache restore
          - composer install
          - npm install
          - Javaâ€‹ insatall
      jobs:
        - name: phpmd
          commands:
            - php vendor/bin/phpmd app/ text phpmd_ruleset.xml
        - name: phpcs
          commands:
            - php vendor/bin/phpcs app --report-full --standard=PSR2
        - name: phpcpd
          commands:
            - 'curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar'
            - php phpcpd.phar app/ --min-lines=50
        - name: Phpjava
          commands:
            - php vendor/bin/phpjavaaa app --report-full --standard=PSR2
          matrix:
            - env_var: FOO
              values:
                - value1
                - value2
  - name: Run Unit tests
    task:
      jobs:
        - name: phpunit
          commands:
            - checkout
            - cache restore
            - composer install
            - npm install
            - ./vendor/bin/phpunit
  - name: Run Browser tests
    task:
      jobs:
        - name: laravel dusk
          commands:
            - checkout
            - cp .env.example .env
            - touch database/database.sqlite
            - cache restore
            - composer install
            - npm install
            - 'php artisan key:generate'
            - 'php artisan dusk:update --detect'
            - php artisan serve --env=dusk.local --port=8010 &
            - php artisan dusk
  - name: Run Security Tests
    task:
      jobs:
        - name: sensiolabs
          commands:
            - checkout
            - 'git clone https://github.com/sensiolabs/security-checker.git'
            - cd security-checker
            - composer install
            - 'php security-checker security:check ../composer.lock'
